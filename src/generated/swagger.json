{
  "openapi": "3.0.0",
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "ApiError": {
        "properties": {
          "status": {
            "type": "number",
            "format": "double"
          },
          "message": {
            "type": "string"
          }
        },
        "required": ["status", "message"],
        "type": "object",
        "additionalProperties": false
      },
      "UUID": {
        "type": "string",
        "example": "7312cc99-f99f-445e-a939-eb66c0c6724c",
        "format": "uuid",
        "description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122).",
        "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
      },
      "AnimalKind": {
        "description": "The pet's animal kind.",
        "enum": ["Cat", "Dog", "Parrot"],
        "type": "string"
      },
      "AdoptionStatus": {
        "description": "The pet's adoption status.",
        "enum": ["Adopted", "Available", "Pending"],
        "type": "string"
      },
      "Pet": {
        "description": "Pet characteristics.",
        "properties": {
          "id": {
            "description": "The pet's identifier.",
            "example": "90dbbed9-bd3d-40ae-ad1c-86602844d4c1",
            "allOf": [
              {
                "$ref": "#/components/schemas/UUID"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "The name of the pet.",
            "example": "Max",
            "minLength": 3,
            "maxLength": 20
          },
          "breed": {
            "type": "string",
            "description": "The kind of breed the pet is.",
            "example": "European Domestic Cat"
          },
          "notes": {
            "type": "string",
            "description": "Free form text associated with the pet.",
            "example": "Likes to scratch a lot."
          },
          "kind": {
            "description": "What kind of pet it is.",
            "example": "Dog",
            "allOf": [
              {
                "$ref": "#/components/schemas/AnimalKind"
              }
            ]
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "description": "The age of the pet.",
            "example": 2,
            "minimum": 0,
            "maximum": 99
          },
          "healthProblems": {
            "type": "boolean",
            "description": "Whether or not the pet has any health problems.",
            "example": false
          },
          "addedDate": {
            "type": "string",
            "format": "date",
            "description": "When the pet was added to the system.",
            "example": "2024-09-07T21:00:00.000Z"
          },
          "status": {
            "description": "Pet's adoption status in the store.",
            "example": "Pending",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdoptionStatus"
              }
            ]
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "The pet's tags.",
            "example": ["cat", "orange"],
            "minItems": 1,
            "maxItems": 5
          }
        },
        "required": [
          "id",
          "name",
          "breed",
          "notes",
          "kind",
          "age",
          "healthProblems",
          "addedDate",
          "status",
          "tags"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "InventoryMap": {
        "description": "Inventory map of adoption status to quantities.",
        "properties": {
          "Adopted": {
            "type": "number",
            "format": "double"
          },
          "Available": {
            "type": "number",
            "format": "double"
          },
          "Pending": {
            "type": "number",
            "format": "double"
          }
        },
        "required": ["Adopted", "Available", "Pending"],
        "type": "object",
        "additionalProperties": false
      },
      "AdoptionRequestStatus": {
        "description": "The adoption request's status.",
        "enum": ["Approved", "Pending", "Denied"],
        "type": "string"
      },
      "AdoptionRequest": {
        "description": "Adoption request information.",
        "properties": {
          "id": {
            "description": "The adoption's ID.",
            "example": "67120cf3-1434-44be-b660-b02df64db677",
            "allOf": [
              {
                "$ref": "#/components/schemas/UUID"
              }
            ]
          },
          "petId": {
            "description": "The adoptee's ID.",
            "example": "90dbbed9-bd3d-40ae-ad1c-86602844d4c1",
            "allOf": [
              {
                "$ref": "#/components/schemas/UUID"
              }
            ]
          },
          "dateOfSubmission": {
            "type": "string",
            "format": "date-time",
            "description": "The date of submission of the adoption request.",
            "example": "2024-08-25T00:00:00.000Z"
          },
          "status": {
            "description": "The adoption request status.",
            "example": "Pending",
            "allOf": [
              {
                "$ref": "#/components/schemas/AdoptionRequestStatus"
              }
            ]
          }
        },
        "required": ["id", "petId", "dateOfSubmission", "status"],
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "api_key": {
        "description": "The TSOA Demo Pet Store API Key is:\n\n`simple-pet-token`",
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "info": {
    "title": "TSOA Demo Pet Store - OpenAPI 3.0",
    "version": "1.0.0",
    "description": "Pet Store Server OpenAPI 3.0 specification.\n\nSome useful links:\n- [The TSOA Demo Pet Store repository](https://github.com/CloudNStoyan/tsoa-project-demo)\n- [The source API definition for the Pet Store](https://github.com/CloudNStoyan/tsoa-project-demo/blob/main/src/generated/swagger.yaml)",
    "contact": {}
  },
  "paths": {
    "/pet": {
      "post": {
        "operationId": "CreatePet",
        "responses": {
          "200": {
            "description": "Successful creation of a pet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        },
        "description": "Add a new pet to the store.",
        "summary": "Add a new pet to the store.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "description": "Create a new pet in the store.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet",
                "description": "Create a new pet in the store."
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UpdatePet",
        "responses": {
          "200": {
            "description": "Successful update of a pet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 404,
                      "message": "Pet not found!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update an existing pet by ID.",
        "summary": "Update an existing pet.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [],
        "requestBody": {
          "description": "The pet's information that should be used in the update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet",
                "description": "The pet's information that should be used in the update."
              }
            }
          }
        }
      }
    },
    "/pet/all": {
      "get": {
        "operationId": "GetAllPets",
        "responses": {
          "200": {
            "description": "Successful retrieval of pets.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "90dbbed9-bd3d-40ae-ad1c-86602844d4c1",
                        "name": "Kozunak",
                        "breed": "Orange Tabby",
                        "notes": "Likes to bite a lot.",
                        "kind": "Cat",
                        "age": 4,
                        "healthProblems": false,
                        "addedDate": "2020-08-21T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "orange"]
                      },
                      {
                        "id": "d4c8d1c2-3928-468f-8e34-b3166a56f9ce",
                        "name": "Happy",
                        "breed": "European Domestic Cat",
                        "notes": "Very annoying.",
                        "kind": "Cat",
                        "age": 1,
                        "healthProblems": false,
                        "addedDate": "2023-08-08T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "annoying", "white"]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Returns all pets with limit and offset functionality.",
        "summary": "Returns all pets.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [
          {
            "description": "Offset to discard elements.",
            "in": "query",
            "name": "offset",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "How many records to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 10,
              "format": "int32",
              "type": "integer"
            }
          }
        ]
      }
    },
    "/pet/findByStatus": {
      "get": {
        "operationId": "GetPetsByStatus",
        "responses": {
          "200": {
            "description": "Successful retrieval of pets.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "90dbbed9-bd3d-40ae-ad1c-86602844d4c1",
                        "name": "Kozunak",
                        "breed": "Orange Tabby",
                        "notes": "Likes to bite a lot.",
                        "kind": "Cat",
                        "age": 4,
                        "healthProblems": false,
                        "addedDate": "2020-08-21T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "orange"]
                      },
                      {
                        "id": "d4c8d1c2-3928-468f-8e34-b3166a56f9ce",
                        "name": "Happy",
                        "breed": "European Domestic Cat",
                        "notes": "Very annoying.",
                        "kind": "Cat",
                        "age": 1,
                        "healthProblems": false,
                        "addedDate": "2023-08-08T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "annoying", "white"]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Returns pets that have the selected adoption status.",
        "summary": "Finds Pets by status.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [
          {
            "description": "The adoption status.",
            "in": "query",
            "name": "status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AdoptionStatus"
            }
          }
        ]
      }
    },
    "/pet/findByKinds": {
      "get": {
        "operationId": "GetPetsByKind",
        "responses": {
          "200": {
            "description": "Successful retrieval of pets.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "90dbbed9-bd3d-40ae-ad1c-86602844d4c1",
                        "name": "Kozunak",
                        "breed": "Orange Tabby",
                        "notes": "Likes to bite a lot.",
                        "kind": "Cat",
                        "age": 4,
                        "healthProblems": false,
                        "addedDate": "2020-08-21T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "orange"]
                      },
                      {
                        "id": "d4c8d1c2-3928-468f-8e34-b3166a56f9ce",
                        "name": "Happy",
                        "breed": "European Domestic Cat",
                        "notes": "Very annoying.",
                        "kind": "Cat",
                        "age": 1,
                        "healthProblems": false,
                        "addedDate": "2023-08-08T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "annoying", "white"]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Returns pets that are of a specific set of kinds.",
        "summary": "Finds Pets by set of kinds.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [
          {
            "description": "The set of kinds of pet.",
            "in": "query",
            "name": "kinds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AnimalKind"
              }
            }
          }
        ]
      }
    },
    "/pet/findByTags": {
      "get": {
        "operationId": "GetPetsByTags",
        "responses": {
          "200": {
            "description": "Successful retrieval of pets.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "90dbbed9-bd3d-40ae-ad1c-86602844d4c1",
                        "name": "Kozunak",
                        "breed": "Orange Tabby",
                        "notes": "Likes to bite a lot.",
                        "kind": "Cat",
                        "age": 4,
                        "healthProblems": false,
                        "addedDate": "2020-08-21T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "orange"]
                      },
                      {
                        "id": "d4c8d1c2-3928-468f-8e34-b3166a56f9ce",
                        "name": "Happy",
                        "breed": "European Domestic Cat",
                        "notes": "Very annoying.",
                        "kind": "Cat",
                        "age": 1,
                        "healthProblems": false,
                        "addedDate": "2023-08-08T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "annoying", "white"]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Returns pets that include the filter tags.",
        "summary": "Finds Pets by tags.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [
          {
            "description": "The tags to filter by.",
            "in": "query",
            "name": "tags",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/pet/findByDate": {
      "get": {
        "operationId": "GetPetsByDate",
        "responses": {
          "200": {
            "description": "Successful retrieval of pets.",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "90dbbed9-bd3d-40ae-ad1c-86602844d4c1",
                        "name": "Kozunak",
                        "breed": "Orange Tabby",
                        "notes": "Likes to bite a lot.",
                        "kind": "Cat",
                        "age": 4,
                        "healthProblems": false,
                        "addedDate": "2020-08-21T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "orange"]
                      },
                      {
                        "id": "d4c8d1c2-3928-468f-8e34-b3166a56f9ce",
                        "name": "Happy",
                        "breed": "European Domestic Cat",
                        "notes": "Very annoying.",
                        "kind": "Cat",
                        "age": 1,
                        "healthProblems": false,
                        "addedDate": "2023-08-08T00:00:00.000Z",
                        "status": "Adopted",
                        "tags": ["cat", "annoying", "white"]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Returns pets that were added after the given date.",
        "summary": "Finds Pets by added date.",
        "tags": ["Pet"],
        "deprecated": true,
        "security": [],
        "parameters": [
          {
            "description": "The date to filter by.",
            "in": "query",
            "name": "afterDate",
            "required": true,
            "schema": {
              "format": "date",
              "type": "string"
            }
          }
        ]
      }
    },
    "/pet/{petId}": {
      "get": {
        "operationId": "GetPet",
        "responses": {
          "200": {
            "description": "Successful retrieval of a pet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 404,
                      "message": "Pet not found!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Returns a single pet.",
        "summary": "Find pet by ID.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [
          {
            "description": "The pet's id.",
            "in": "path",
            "name": "petId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeletePet",
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 404,
                      "message": "Pet not found!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Deletes a pet by ID.",
        "summary": "Deletes a pet.",
        "tags": ["Pet"],
        "security": [],
        "parameters": [
          {
            "description": "Pet ID to delete.",
            "in": "path",
            "name": "petId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/store/inventory": {
      "get": {
        "operationId": "GetInventory",
        "responses": {
          "200": {
            "description": "Successful retrieval of inventory.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryMap"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 401,
                      "message": "Access denied!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Returns a map of adoption status to quantities.",
        "summary": "Returns pet inventories by adoption status.",
        "tags": ["Store"],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": []
      }
    },
    "/store/adopt": {
      "post": {
        "operationId": "AdoptPet",
        "responses": {
          "200": {
            "description": "Successful creation of adoption request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 401,
                      "message": "Access denied!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Place an adoption request for a pet.",
        "summary": "Request an adoption of a pet.",
        "tags": ["Store"],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "The adoption request.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdoptionRequest",
                "description": "The adoption request."
              }
            }
          }
        }
      }
    },
    "/store/adopt/{requestId}": {
      "get": {
        "operationId": "GetAdoptRequestById",
        "responses": {
          "200": {
            "description": "Successful retrieval of adoption request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdoptionRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 401,
                      "message": "Access denied!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 404,
                      "message": "Adoption request not found!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Find adoption request by ID.",
        "summary": "Find adoption request by ID.",
        "tags": ["Store"],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "description": "The adoption request's ID.",
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteAdoptRequestById",
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 401,
                      "message": "Access denied!"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "status": 404,
                      "message": "Adoption request not found!"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete adoption request by ID.",
        "summary": "Delete adoption request by ID.",
        "tags": ["Store"],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "description": "The adoption request's ID.",
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    }
  },
  "servers": [],
  "tags": [
    {
      "name": "Pet",
      "description": "Everything about your Pets",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Store",
      "description": "Access to Petstore orders",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ]
}
