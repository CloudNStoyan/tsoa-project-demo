{
  "openapi": "3.0.1",
  "info": {
    "title": "TSOA Demo Pet Store - OpenAPI 3.0",
    "description": "Pet Store Server OpenAPI 3.0 specification.\n\nSome useful links:\n- [The TSOA Demo Pet Store repository](https://github.com/CloudNStoyan/tsoa-project-demo)\n- [The source API definition for the Pet Store](https://github.com/CloudNStoyan/tsoa-project-demo/blob/main/src/generated/swagger.yaml)",
    "version": "1.0.0"
  },
  "paths": {
    "/Pet": {
      "post": {
        "tags": [
          "Pet"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pet"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdoptionStatus": {
        "enum": [
          "Adopted",
          "Available",
          "Pending"
        ],
        "type": "string",
        "description": "The pet's adoption status."
      },
      "AnimalKind": {
        "enum": [
          "Cat",
          "Dog",
          "Parrot"
        ],
        "type": "string",
        "description": "The pet's animal kind."
      },
      "Pet": {
        "required": [
          "addedDate",
          "age",
          "breed",
          "healthProblems",
          "id",
          "kind",
          "name",
          "notes",
          "status",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The pet's identifier.",
            "format": "uuid"
          },
          "name": {
            "maxLength": 20,
            "minLength": 3,
            "type": "string",
            "description": "The name of the pet."
          },
          "breed": {
            "minLength": 1,
            "type": "string",
            "description": "The kind of breed the pet is."
          },
          "notes": {
            "minLength": 1,
            "type": "string",
            "description": "Free form text associated with the pet."
          },
          "kind": {
            "$ref": "#/components/schemas/AnimalKind"
          },
          "age": {
            "type": "integer",
            "description": "The age of the pet.",
            "format": "int32"
          },
          "healthProblems": {
            "type": "boolean",
            "description": "Whether or not the pet has any health problems."
          },
          "addedDate": {
            "type": "string",
            "description": "When the pet was added to the system.",
            "format": "date"
          },
          "status": {
            "$ref": "#/components/schemas/AdoptionStatus"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The pet's tags."
          }
        },
        "additionalProperties": false,
        "description": "Pet characteristics."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      }
    }
  }
}